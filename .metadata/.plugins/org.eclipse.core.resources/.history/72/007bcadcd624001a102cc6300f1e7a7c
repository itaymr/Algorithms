import java.util.Iterator;
import java.util.LinkedList;

public class CyclicLinkedList {

	
	LinkedList<Node> _nodes;
	private int size;
	private int index;
	
	public CyclicLinkedList()
	{
		_nodes = new LinkedList();
		size = 0;
	}
	
	public void addNode(Node n)
	{
		if(_nodes.isEmpty())
		{
			_nodes.add(n);
			n.setNext(n);
			size++;
			return;
		}
		
		_nodes.getLast().setNext(n);
		_nodes.add(n);
		_nodes.getLast().setNext(_nodes.getFirst());
		size++;
	}
	
	
	public Iterator<Node> iteretor()
	{
		return _nodes.iterator();
	}
	
	public LinkedList<Node> myList()
	{
		return _nodes;
	}
	
	
	//size = 4
	//index = 0
	// getnext
	// index = 1;
	// result = 0 % 4 = 0;
	//getnext
	// index = 2,result = 1 %4 = 1;
	//getprev
	//index = 1, result = 0 % 4 = 0;
	//GETPREV
	//index = 0, result = -1 % 4 = 1;
	
	public Node get(int index)
	{
		return _nodes.get(index);
	}
	
	//
	public Node getNext()
	{
		return this.get(index++);
	}
	
	public Node getPrev() {
		
		return this.get(--index);
	}
	
}
